# 问题：
s1 - s2 array([88, 85, 85, ..., 44, 15, 35], dtype='timedelta64[M]') 转为int类型 

#
(target_d['LOAD_TIME'] - target_d['FFP_DATE']).dt.days 将时间格式转为浮点型数字
函数的不同顺序造成速度不同 target_d.describe().T
target_d.describe().loc[['max','min'],:]
为何数据标准化 数据符合均值为0，标准差为1的正态分布；消除不同单位的差别，数值可以进行比较了
标准差标准化数据 与 计算出来的不一致 可能是条件筛选的原因
['count'] + list(target_d.columns) list不能用于str
画图 https://zhuanlan.zhihu.com/p/27990382

===

import numpy as np
import pandas as pd
from pandas import Series, DataFrame

path = '数据源\\图书配套数据、代码\\chapter7\\demo\\data\\air_data.csv' 
f = open(path, encoding = 'utf-8')
d = pd.read_csv(f)

# 数据探索
每列的最大值，最小值，空值
检查属性中空值数量，最小值为0的数量，并分析原因
des_d = d.describe().T[['max','min']]
des_d['number_of_null'] = d.apply(lambda x: len(x) - x.count())

# 数据预处理
数据清洗，删除空值，删除不合规范的数据
path = '数据源\\图书配套数据、代码\\chapter7\\demo\\data\\air_data.csv' 
f = open(path, encoding = 'utf-8')
d = pd.read_csv(f)

select_d = d[d['SUM_YR_1'].notnull() & d['SUM_YR_2'].notnull()] # & 且
b1 = select_d['SUM_YR_1'] != 0
b2 = select_d['SUM_YR_2'] != 0
b3 = (select_d['SEG_KM_SUM'] ==0) & (select_d['avg_discount']==0) 
select_d = select_d[b1|b2|b3] # | 或

===

# 数据变换，构造新的属性
target_d = select_d.copy()
target_d['LOAD_TIME'] = pd.to_datetime(target_d['LOAD_TIME'])
target_d['FFP_DATE'] = pd.to_datetime(target_d['FFP_DATE'])
target_d['L'] = ((target_d['LOAD_TIME'] - target_d['FFP_DATE']).dt.days)/30

target_d['R'] = target_d['LAST_TO_END']
target_d['F'] = target_d['FLIGHT_COUNT']
target_d['M'] = target_d['SEG_KM_SUM']
target_d['C'] = target_d['avg_discount'].round(2)

target_d = target_d[['L','R','F','M','C']]

# target_d.describe().loc[['max','min'],:] # 观察数据量纲

===

# 数据变换，数据归一
zs_d = (target_d - target_d.mean())/target_d.std()

===

# 建模
from sklearn.cluster import KMeans
model = KMeans(n_jobs = 4, n_clusters = 5)
model.fit(zs_d)

# zs_d['labels'] = model.labels_
center_d = pd.concat([pd.Series(model.labels_).value_counts(), pd.DataFrame(model.cluster_centers_)], axis = 1)
center_d.columns = ['count'] + list(target_d.columns)


