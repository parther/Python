# http://dwz.cn/6tu4AK
根据用户消费数据，计算出用户消费行为的关键指标，并且对用户分层：
客单价
复购率和回购率
消费时间节点，消费周期
用户分层

# 
复购率：
浅谈重复购买率：关于提升重复购买率的几点思考 http://www.woshipm.com/operate/790907.html
某时间窗口内消费两次及以上的用户占总消费用户的比例
意义：代表用户的忠诚度，复购率越高忠诚度越高

回购率：
在下一个时间窗口有消费的人数占本时间窗口总消费人数的比例
意义：也代表用户的忠诚度，类似于消费用户的留存率

三个月作为时间窗口统计

===
#　问题
d['order_date'].values.astype('datetime64[D]') 返回的数据类型为 dtype='datetime64[ns]，数据类型没有变，变的是value
d['order_month'] = d['order_date'].astype('int')：
TypeError: cannot astype a datetimelike from [datetime64[ns]] to [int32]

stack() 是堆积的意思，将列变成索引
d.groupby('user_id').describe() 与 d.describe() 的表现形式不一样：
g_d 和 d 的切片方式完全不一样，g_d需要用apply，不能直接使用iloc。条件筛选也不一样

d['order_date'].values.astype('datetime64[M]') 并没有改变d['order_date']的数据类型, 只是提取数据的月份
d['order_month'].astype('str') 改变了d['order_date']的数据类型

pivot_d.applymap(lambda x : 1 if x>1 else 0 if x==1 else None ) else 0 if x==1连在一起用 包含的关系。lambda没有elif的用法

len(d) d.count() count不计算空值
在运算中，None 当成了0处理，计数时不处理
help(d.count) 除非內建函数，否则查询函数的意义都需要跟上属性d
group_user_d.replace('unreg',np.NaN) 和 group_user_d.replace('unreg',None) 只能是使用前一种
\s+表示匹配任意空白。\ 在编程语言中一般是转义功能


