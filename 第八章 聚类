# 问题：
用 类 解决循环问题
centers_d.rolling(2).mean() 为什么用这种方式确定范围值是合理的

===

# 重点：
     kmodel.fit(g_d2[[u'肝气郁结证型系数']].as_matrix()) 
          # 参数必须是array类型，as_matrix() 将dataframe 转换为array
          # fit 要求 d 的所有数据为 float 或 int 类型
          # 要求 数据为 多维数据
     SyntaxError: invalid character in identifier # 一般是标点符号出了问题
     A value is trying to be set on a copy of a slice from a DataFrame # 需要用copy（）的方法解决，赋值之前先copy
     Exception: Data must be 1-dimensional # 多维数组是不行的，无法转成series格式  pd.DataFrame(a)可以

     KeyError: '热毒蕴结证型系数' # 一般是不存在这个值
     TypeError # 一般是数据类型错了，比如中括号代表的list
     AttributeError # 一般是方法或属性错了或者不存在

     kmodel.labels_ # 对应每个数据的 分组标号，聚类中心与分组标号是对应的
     [ l2[1] + str(i) for i in range(4)]  # + 后面是str(i)类型
     
a.sort(axis=0) 对array的值排序
===

# 单个数据聚类
import numpy as np
import pandas as pd
from pandas import Series, DataFrame

path = '数据源\\图书配套数据、代码\\chapter8\\demo\\data\\data.csv' 
f = open(path, encoding = 'utf-8')
d = pd.read_csv(f)
d2 = d[['肝气郁结证型系数','热毒蕴结证型系数','冲任失调证型系数','气血两虚证型系数','脾胃虚弱证型系数','肝肾阴虚证型系数','TNM分期']]

from sklearn.cluster import KMeans # 开始建模
k = 4
kmodel = KMeans(n_clusters = k, n_jobs = 4)
kmodel.fit(g_d2[[u'肝气郁结证型系数']].as_matrix())

a = kmodel.cluster_centers_ # 将数据分组，并将数据对应到分组标号
a_d = pd.DataFrame(a).sort_values(by = 0)#nd 只能用 dataframe 转换
a_d2 = a_d.rolling(2).mean()
a_l = [0] + list(a_d2.iloc[1:][0]) + [g_d2['肝气郁结证型系数'].max()] #series 尽量用 list 转换
a_l_s = pd.cut(g_d2['肝气郁结证型系数'], a_l, labels = ['a1','a2','a3','a4']) # 将数据对应到分组标号

g_d4 = g_d2.copy()
g_d4['分组'] = a_l_s
g_d5 = g_d4[['TNM分期','分组']]
=

# 多个数据聚类，用 for in
from sklearn.cluster import KMeans #cluster是子库，KMeans是类，用help可以看到

typelabel_dic = {'肝气郁结证型系数':'A','热毒蕴结证型系数':'B','冲任失调证型系数':'C',
                 '气血两虚证型系数':'D','脾胃虚弱证型系数':'E','肝肾阴虚证型系数':'F'} 
k = 4
keys_l = list(typelabel_dic.keys())
result_d = pd.DataFrame()

if __name__ == '__main__': #判断是否主窗口运行，如果是将代码保存为.py后运行，则需要这句，如果直接复制到命令窗口运行，则不需要这句
    for i in range(len(keys_l)):
        kmodel = KMeans(n_clusters = k, n_jobs = 4)
        kmodel.fit(d2[[keys_l[i]]].as_matrix())
        
        a = kmodel.cluster_centers_
        a_d = pd.DataFrame(a).sort_values(by = 0)#nd 只能用 dataframe 转换
        a_d2 = a_d.rolling(2).mean()
        a_l = [0] + list(a_d2.iloc[1:][0]) + [d2[keys_l[i]].max()] #series 尽量用 list 转换

        a_l_s = pd.cut(d2[keys_l[i]], a_l, labels = [ typelabel_dic[keys_l[i]] + str(j) for j in range(4)])

        d3 = d2.copy()
        d3[typelabel_dic[keys_l[i]]] = a_l_s
        d3[['TNM分期',typelabel_dic[keys_l[i]]]].to_csv('数据源\\图书配套数据、代码\\chapter8\\demo\\'+ typelabel_dic[keys_l[i]] +'.csv')
=

# 多个数据聚类，用def
from sklearn.cluster import KMeans #cluster是子库，KMeans是类，用help可以看到
def f(x):
    kmodel = KMeans(n_clusters = k, n_jobs = 4)
    kmodel.fit(d2[[x]].as_matrix())
        
    a = kmodel.cluster_centers_
    a_d = pd.DataFrame(a).sort_values(by = 0)#nd 只能用 dataframe 转换
    a_d2 = a_d.rolling(2).mean()
    a_l = [0] + list(a_d2.iloc[1:][0]) + [d2[x].max()] #series 尽量用 list 转换

    a_l_s = pd.cut(d2[x], a_l, labels = [ x + str(j) for j in range(4)]) #灵活处理

    d3 = d2.copy()
    d3[x+'n'] = a_l_s
    
    return d3[[x+'n', 'TNM分期']]
    
m_d1 = f('肝气郁结证型系数')
m_d2 = f('热毒蕴结证型系数')
m_d3 = f('冲任失调证型系数')
m_d4 = f('气血两虚证型系数')
m_d5 = f('脾胃虚弱证型系数')
m_d6 = f('肝肾阴虚证型系数')

im_d1 = m_d1.set_index('TNM分期')
im_d2 = m_d2.set_index('TNM分期')
im_d3 = m_d3.set_index('TNM分期')
im_d4 = m_d4.set_index('TNM分期')
im_d5 = m_d5.set_index('TNM分期')
im_d6 = m_d6.set_index('TNM分期', drop = False) # 保留列表

m_d = pd.concat([im_d1, im_d2, im_d3, im_d4, im_d5, im_d6], axis = 1) # 合并数据，最终形成用于建模的数据表格
m_d2 = m_d.reset_index(['TNM分期'])



