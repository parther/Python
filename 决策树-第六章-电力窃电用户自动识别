# 问题：
保存的模型如何使用

#
http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier
决策树算法的Python实现 https://zhuanlan.zhihu.com/p/20794583

===

import numpy as np
import pandas as pd
from pandas import DataFrame, Series
import matplotlib.pyplot as plt
% matplotlib inline

f = '数据源\\图书配套数据、代码\\chapter6\\demo\\data\\model.xls' 
d = pd.read_excel(f) #读取数据，数据的前三列是特征，第四列是标签

from random import shuffle
d_a = d.as_matrix()
shuffle(d_a)
p = 0.8
train_a = d_a[:int(len(d_a)*p)]
test_a = d_a[int(len(d_a)*p):]

#构建CART决策树模型
from sklearn.tree import DecisionTreeClassifier # 导入决策树模型
model = DecisionTreeClassifier()
model.fit(train_a[:,:3],train_a[:,3])
predict_result = model.predict(train_a[:,:3])

f_tree = '数据源\\图书配套数据、代码\\chapter6\\demo\\tmp\\tree.pkl' # 保存模型
from sklearn.externals import joblib
joblib.dump(tree, f_tree)

# 生成混淆矩阵
def cm_plot(y, yp): # 混淆矩阵函数
    from sklearn.metrics import confusion_matrix
    cm = confusion_matrix(y, yp)
    plt.matshow(cm, cmap=plt.cm.Greens) 
    plt.colorbar() 
    for x in range(len(cm)): 
        for y in range(len(cm)):
            plt.annotate(cm[x,y], xy=(x, y), horizontalalignment='center', verticalalignment='center')
           
cm_plot(train_a[:,3],predict_result) 

# 做出ROC曲线
from sklearn.metrics import roc_curve #导入ROC曲线函数
import matplotlib.pyplot as plt

fpr, tpr, thresholds = roc_curve(test[:,3], tree.predict_proba(test[:,:3])[:,1], pos_label=1)
plt.plot(fpr, tpr, linewidth=2, label = 'ROC of CART', color = 'green') #作出ROC曲线
plt.xlabel('False Positive Rate') #坐标轴标签
plt.ylabel('True Positive Rate') #坐标轴标签
plt.ylim(0,1.05) #边界范围
plt.xlim(0,1.05) #边界范围
plt.legend(loc=7) #图例
plt.show() #显示作图结果


