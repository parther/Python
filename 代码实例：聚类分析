#
     为何也要数据标准化
===

# 使用K-Means算法聚类消费行为特征数据
import pandas as pd
inputfile = '数据源\\图书配套数据、代码\\chapter5\\demo\\data\\consumption_data.xls' #销量及其他属性数据
outputfile = '数据源\\图书配套数据、代码\\chapter5\\demo\\tmp\\data_type.xls' #保存结果的文件名

d = pd.read_excel(inputfile, index_col = 'Id') # 读取数据
d_zs = 1.0*(data - data.mean())/data.std() # 数据标准化

from sklearn.cluster import KMeans
k = 3 # 聚类的类别
iteration = 500 # 聚类最大循环次数
model = KMeans(n_clusters = k, n_jobs = 4, max_iter = iteration) # 分为k类，并发数4
model.fit(d_zs) #开 始聚类

#简单打印结果
r1_s = pd.Series(model.labels_).value_counts() #统计各个类别的数目
r1_d = pd.DataFrame(model.cluster_centers_) #找出聚类中心
r2_d = pd.concat([r1_d, r1_s], axis = 1) #横向连接（0是纵向），得到聚类中心对应的类别下的数目
r2_d.columns = list(d.columns) + [u'类别数目'] #重命名表头

# 还原的数据归到 聚类类别
r_d = pd.concat([d, pd.Series(model.labels_, index = d.index)], axis = 1)  #详细输出每个样本对应的类别
r_d.columns = list(d.columns) + [u'聚类类别'] #重命名表头

r0_d = (r_d[r_d[u'聚类类别']==0]).iloc[:,0:3]

import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimHei'] #用来正常显示中文标签
plt.rcParams['axes.unicode_minus'] = False #用来正常显示负号

r0_d.plot(kind='kde', linewidth = 2, subplots = True, sharex = False)#subplots分离成独立图像，sharex使用同一个x轴
plt.ylabel('密度')
plt.legend()
plt.show()
=

# 用 for in 处理批量
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimHei'] #用来正常显示中文标签
plt.rcParams['axes.unicode_minus'] = False #用来正常显示负号

plt.figure()
for i in range(k):
    r012_d = (r_d[r_d[u'聚类类别']==i]).iloc[:,0:3]
    r012_d.plot(kind='kde', linewidth = 2, subplots = True, sharex = False)
    plt.ylabel(u'密度'+str(i))
    plt.xlabel(u'人数'+str(i))
    plt.legend()
    plt.show()
